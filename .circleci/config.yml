version: 2.1

orbs:
  codecov: codecov/codecov@1.0.5

executors:
  go-116:
    docker:
      # Using container: https://hub.docker.com/r/circleci/golang
      - image: circleci/golang:1.16.4-node
    working_directory: /go/src/github.com/kemokemo/furit

jobs:
  test:
    executor: go-116
    steps:
      - checkout
      - run: go version
      - run: go get -v -t -d ./...
      - run: go test -v -cover -coverprofile=coverage.out ./...
      - codecov/upload:
          file: ./coverage.out
  lint:
    executor: go-116
    steps:
      - checkout
      - run: go get -v -t -d ./...
      # see here: https://github.com/golang/lint/issues/415#issuecomment-511234597
      - run: go get -u golang.org/x/lint/golint
      - run: golint ./...
      - run: go vet ./...
  build:
    executor: go-116
    steps:
      - checkout
      - run: go get -v -t -d ./...
      - run: go build
  deploy:
    executor: go-116
    steps:
      - run: echo 'export PATH=${GOPATH}/bin/:${PATH}' >> $BASH_ENV
      - checkout
      - run: go get -v -t -d ./...
      - run: go get github.com/mitchellh/gox
      - run: go get github.com/tcnksm/ghr
      - run: mkdir release
      - run: gox -ldflags="-X 'main.revision=$(git rev-parse --short HEAD)'" -osarch '!darwin/386' -output "./release/{{.Dir}}_{{.OS}}_{{.Arch}}"  ./ ./...
      - run: ghr -u $CIRCLE_PROJECT_USERNAME $CIRCLE_TAG release/

workflows:
  version: 2
  test, lint and build:
    jobs:
      - test
      - lint
      - build:
          requires:
            - lint
  deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
